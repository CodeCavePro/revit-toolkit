# Operating system (build VM template)
os: Windows Server 2016

# If the build configuration does not specify build worker image
# then Visual Studio 2015 image is used.
image: Visual Studio 2017

# Restrict to Git branches below
branches:
  only:
    - master

# Scripts that run after cloning repository
install:
  - nuget restore

# Cache files until appveyor.yml is modified.
cache:
  - packages -> **\packages.config  # preserve "packages" directory in the root of build folder but will reset it if packages.config is modified
  - '%LocalAppData%\NuGet\Cache'    # NuGet < v3
  - '%LocalAppData%\NuGet\v3-cache' # NuGet v3

# Version format
version: 1.1.{build}

init:
- ps: |
    if ($env:APPVEYOR_REPO_TAG -eq "true" -and $env:APPVEYOR_REPO_TAG_NAME)
    {
        $tag_name = $env:APPVEYOR_REPO_TAG_NAME
        Write-Host "Building a tag: $tag_name";
        if ($tag_name -match '([0-9]+[\.-][0-9]+[\.-][0-9]+[\.-]?[0-9]?+)')
        {
            Update-AppveyorBuild -Version $env:APPVEYOR_REPO_TAG_NAME
        } else {
            Write-Host "Git tag is not a valid version: $tag_name";
        }
    } else {
        Update-AppveyorBuild -Version $env:APPVEYOR_BUILD_VERSION
        Write-Host "Using build version: $env:APPVEYOR_BUILD_VERSION";
    }

dotnet_csproj:
  patch: true
  file: '**\*.csproj'
  version: $(APPVEYOR_BUILD_VERSION)
  package_version: $(APPVEYOR_BUILD_VERSION)
  assembly_version: $(APPVEYOR_BUILD_VERSION)
  file_version: $(APPVEYOR_BUILD_VERSION)
  informational_version: '$(APPVEYOR_BUILD_VERSION)-beta'

assembly_info:
  patch: true
  file: '**\AssemblyInfo.*'
  assembly_version: $(APPVEYOR_BUILD_VERSION)
  assembly_file_version: $(APPVEYOR_BUILD_VERSION)
  assembly_informational_version: '$(APPVEYOR_BUILD_VERSION)-beta'

# Run scripts below before
before_build:
  - where msbuild
  - cmd: msbuild /t:Clean 

# To run your custom scripts instead of automatic MSBuild
build_script:
  - cmd: msbuild /t:Rebuild /p:Configuration=Debug

# NuGet files qualified as artifacts
artifacts:
  - path: 'bin\**\*.nupkg' # find the NuGet files
    name: Revit_Toolkit

# Deploy to GitHub releases
deploy:
  provider: GitHub
  tag: $(APPVEYOR_REPO_TAG_NAME)
  release: "Revit Toolkit v$(APPVEYOR_REPO_TAG_NAME)"
  description: "* for .NET Standard 2.0 (.NET Core 2.0, .NET Framework >= 4.6.1 etc) use CodeCave.Revit.Toolkit.{x.y.z}.nupkg file\n* for .NET Framework 4.5.x use CodeCave.Revit.Toolkit.NetFramework.{x.y.z}.nupkg file"
  force_update: true
  auth_token:
    secure: 2+d0KgCbWQpUR8TZfzvUEzbi4NQP6F/Tt0PUwLn6jXZCyO8FnrFVFJPsFa0QBQFl
  artifact: Revit_Toolkit
  draft: false
  prerelease: false
  on:
    # branch: master
    appveyor_repo_tag: true

# Start builds on tags only (GitHub and BitBucket)
skip_non_tags: true

# Turn off tests
test: off
